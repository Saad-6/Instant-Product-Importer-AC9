@model APIModel

@{
    ViewBag.Title = "Generic API";
    ViewBag.PageCaption = "Configure API";
}

<div class="wrapper wrapper-content animated fadeInRight" id="containerId">
    <div class="ibox float-e-margins py-3">
        <div class="ibox-title">
            <h5>Configure API Attributes</h5>
        </div>
        <div class="ibox-content">
            @using (Html.BeginForm("CallApi", "TPIAdmin", FormMethod.Post, new { id = "apiForm" }))
            {
                <div class="row">
                    <div class="col-md-8">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ApiUrl, new { @for = "apiUrl" })
                            @Html.TextBoxFor(model => model.ApiUrl, new { @class = "form-control", @id = "apiUrl", @placeholder = "Enter API URL", @required = "required" })
                            <div id="apiUrlError" class="text-danger" style="display: none;">API URL is required</div> <!-- Validation message placeholder -->
                        </div>
                    </div>
                </div>
                <label>Map JSON Keys to Attributes:</label>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ApiResponse.Name, new { @for = "productName" })
                            @Html.TextBoxFor(model => model.ApiResponse.Name, new { @class = "form-control", @id = "productName", @placeholder = " Product Name Key ; Default key is 'name' " })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ApiResponse.Price, new { @for = "price" })
                            @Html.TextBoxFor(model => model.ApiResponse.Price, new { @class = "form-control", @id = "price", @placeholder = " Price Key ; Default key is 'price' " })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ApiResponse.Image, new { @for = "imageUrl" })
                            @Html.TextBoxFor(model => model.ApiResponse.Image, new { @class = "form-control", @id = "imageUrl", @placeholder = " Image URL Key ; Default key is 'image' " })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ApiResponse.Summary, new { @for = "summary" })
                            @Html.TextBoxFor(model => model.ApiResponse.Summary, new { @class = "form-control", @id = "summary", @placeholder = " Summary Key ; Default key is 'summary' " })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ApiResponse.Description, new { @for = "description" })
                            @Html.TextBoxFor(model => model.ApiResponse.Description, new { @class = "form-control", @id = "description", @placeholder = " Description Key ; Default key is 'description'" })
                        </div>
                        <div class="form-group">
                            <label>View Type</label>
                            <div>
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(model => model.View, "Tabular", new { id = "tabularView", @checked = "checked" }) Tabular View
                                </label>
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(model => model.View, "Grid", new { id = "gridView" }) Grid View
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
                <button type="submit" class="btn btn-primary callApi">Call API</button>
            }

            @using (Ajax.BeginForm("DemoAPI", "TPIAdmin", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "jsondata", OnSuccess = "$('#demoAPIModal').modal('show');" },
                new { id = "demoApiForm", @class = "form-inline" }))
            {
                @Html.Hidden("ApiUrlParam", "", new { id = "ApiUrlParam" }) <!-- Hidden field for API URL -->

                <button type="button" class="btn btn-warning demo-api">Demo API</button>
                <div id="apiUrlDemoError" class="text-danger" style="display: none;">API URL is required</div> <!-- Validation message placeholder -->
            }
        </div>
    </div>
</div>

<!-- Demo API Modal -->
<div class="modal inmodal" id="demoAPIModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content animated fadeIn">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">JSON Response</h4>
            </div>
            <div class="modal-body">
                <textarea class="form-control" rows="15" id="jsondata"></textarea>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $(document).on('click', '.demo-api', function (event) {
                event.preventDefault();

                var apiUrl = $('#apiUrl').val().trim(); // Get the value and trim whitespace
                if (apiUrl === '') {
                    // Show error message if API URL is empty
                    $('#apiUrl').addClass('is-invalid');
                    $('#apiUrlDemoError').show(); // Show the validation message
                    return false;
                } else {
                    // Hide error message and remove class if API URL is not empty
                    $('#apiUrl').removeClass('is-invalid');
                    $('#apiUrlDemoError').hide(); // Hide the validation message

                    // Set the hidden field value and submit the AJAX form
                    $('#ApiUrlParam').val(apiUrl);
                    $('#demoApiForm').submit(); // Submit the form
                }
            });

            // Remove the error message when the user starts typing
            $('#apiUrl').on('input', function () {
                var apiUrl = $(this).val().trim();
                if (apiUrl !== '') {
                    $('#apiUrl').removeClass('is-invalid');
                    $('#apiUrlDemoError').hide(); // Hide the validation message
                }
            });
        });
    </script>
}
